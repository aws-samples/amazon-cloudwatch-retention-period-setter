# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# NOTES
# This CloudFormation template would be provisioned as a StackSet in order to create the needed EventBridge rules
# across the different regions
# Only needed if you're planning to deploy the solution for more than one region


AWSTemplateFormatVersion: 2010-09-09
Description: 
    This template deploys Amazon EventBridge Rule in different AWS regions that routes events across regions

Parameters:

  EventBusArn: 
    Description: The Arn of the EventBus to which you would route events to from different regions.
    Type: String

Resources:
  EventRuleRegion:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: Routes to the centralized region default event bus
      EventBusName: default
      EventPattern:
        source:
          - "aws.logs"
        detail-type: 
          - "AWS API Call via CloudTrail"
        detail:
          eventSource: 
            - "logs.amazonaws.com"
          eventName:
            - "CreateLogGroup"
      State: "ENABLED"
      Targets:
        - Arn: !Ref EventBusArn
          Id: 'CrossRegionDestinationBus'
          RoleArn: !GetAtt 
            - EventBridgeIAMrole
            - Arn

  EventBridgeIAMrole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Join ['-', ['PutEventsDestinationBus', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !Ref EventBusArn